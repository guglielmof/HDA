function compute_ssd_pairs(measure, metric, varargin) 
    common_parameters;
    varargs = process_varargin(varargin);
    
    
    base_path = '../../data/downsampled_measures';
    

    mpath = sprintf("%s/%s/%s/", base_path, metric, measure);        

    
    %compute the true anova
    data_orig = readtable(sprintf("%s1/0.csv",mpath), 'Format','%d%s%d%d%f%f%s%s');
    alphas = unique(data_orig{:,'alpha'});
    ssd_pairs = zeros(length(alphas), 1);
    if lenght(alphas)>1
        for an=1:length(alphas)
            alpha = alphas(an);
            data = filter_data_alpha(data_orig, alpha);

            [tbl, soa, ref_mc] = compute_anova('MD1', data);

            ssd_pairs(an) = sum(ref_mc{:, 6}<EXPERIMENT.analysis.alpha);
        end
    else
        data(:, 'alpha') = [];
        data = filter_data(data);
    end
    disp(ssd_pairs);
end

function fd = filter_data(data)
    fd = data;
    fd(:, {'Var1', 'utt'}) = [];

    %aggregate data per conversation
    fd = grpstats(fd, {'conv', 'run'}, 'mean', ...
        'varnames', {'conv', 'run', 'GroupCount', 'score'});
    fd(:, 'GroupCount') = [];
end 

function fd = filter_data_alpha(data, alpha)
    fd = data(data{:,'alpha'}==alpha, :);
    fd(:, {'Var1', 'utt', 'roots', 'leaves', 'alpha'}) = [];

    %aggregate data per conversation
    fd = grpstats(fd, {'conv', 'run'}, 'mean', ...
        'varnames', {'conv', 'run', 'GroupCount', 'score'});
    fd(:, 'GroupCount') = [];
end 